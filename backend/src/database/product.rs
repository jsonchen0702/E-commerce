//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.14

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "product")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub description: String,
    pub image_id: Option<String>,
    #[sea_orm(column_type = "Decimal(Some((20, 4)))")]
    pub price: Decimal,
    pub stock: i32,
    pub subcategory_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::product_review::Entity")]
    ProductReview,
    #[sea_orm(has_many = "super::sale_and_product::Entity")]
    SaleAndProduct,
    #[sea_orm(
        belongs_to = "super::subcategory::Entity",
        from = "Column::SubcategoryId",
        to = "super::subcategory::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Subcategory,
}

impl Related<super::product_review::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ProductReview.def()
    }
}

impl Related<super::sale_and_product::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::SaleAndProduct.def()
    }
}

impl Related<super::subcategory::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Subcategory.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
